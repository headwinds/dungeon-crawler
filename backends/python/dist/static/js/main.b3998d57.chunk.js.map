{"version":3,"sources":["constants/action-types.js","types/dungeonTypes.js","reducers/grid.js","reducers/player.js","config.js","reducers/ui.js","reducers/index.js","components/inventory-item.js","components/inventory.js","components/item-interactions.js","containers/backpack.js","actions/currency.js","constants/settings.js","bin/game-map-creator.js","types/weaponTypes.js","types/shieldTypes.js","types/enemyTypes.js","types/neutralTypes.js","types/potionTypes.js","types/npcTypes.js","bin/entity-creator.js","actions/index.js","components/cell.js","utils/currency-utils.js","actions/player.js","actions/npc.js","containers/player.js","utils/npc-utils.js","actions/examine.js","containers/game.js","components/header.js","containers/messages.js","containers/npc-store/storeItem.js","containers/npc-store/store.js","containers/npc-store/npc-store.js","containers/player-settings.js","components/score.js","components/scoreboard.js","containers/tips.js","containers/DungeonCrawler.js","index.js"],"names":["ADD_GOLD","REMOVE_GOLD","ADD_SILVER","REMOVE_SILVER","ADD_COPPER","REMOVE_COPPER","ADD_WEAPON","ADD_SHIELD","ADD_XP","CHANGE_ENTITY","CHANGE_PLAYER_POSITION","CREATE_LEVEL","MODIFY_HEALTH","NEW_MESSAGE","PLAYER_BOUGHT_ITEM","PLAYER_SOLD_ITEM","PLAYER_TRADE_SUCCESS","PLAYER_TRADE_FAIL","TALK_TO_NPC","RESTART","TOGGLE_FOG_MODE","LOOK_AROUND","RESET_DUNGEON","SET_END_GAME","UPDATE_DUNGEON","SET_DUNGEON_LEVEL","TOGGLE_NPC_STORE","NPC_SOLD_ITEM","dungeonTypes","id","name","exits","exitsComplete","questsComplete","type","initialState","entities","dungeonLevel","dungeonTransit","dungeon","Object","objectSpread","playerPosition","endGame","health","xp","gold","currency","silver","copper","weapon","damage","shield","protection","examining","iconClass","title","action","aroundMe","inventory","npcsAroundMe","currentConfig","TIPS_ALONG_BOTTOM","GAME_SHOW_TITLE","VP_TYPE","FOG_MODE","GAME_TITLE","GAME_SUBTITLE","GAME_URL","MAX_INVENTORY_ITEMS","config","VP_WIDTH_RATIO_CONTAINED","VP_HEIGHT_RATIO_CONTAINED","VP_HEIGHT_RATIO_FULL","VP_WIDTH_RATIO_FULL","FULL_GRID_RATIO_WIDTH","FULL_GRID_RATIO_HEIGHT","CURRENCY_GOLD_LABEL","CURRENCY_SILVER_LABEL","CURRENCY_COPPER_LABEL","fogMode","messages","showNPCStore","rootReducer","combineReducers","grid","state","arguments","length","undefined","_ref","payload","t","_payload$coords","slicedToArray","coords","x","y","update","defineProperty","$set","entity","level","transit","player","ui","concat","toConsumableArray","inventory_item","item","handleMouseOver","handleMouseOut","handleClick","console","log","react_default","a","createElement","onMouseOver","onMouseOut","onClick","className","style","display","position","border","margin","width","height","Inventory","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isOpen","handleKeyPress","bind","assertThisInitialized","window","addEventListener","removeEventListener","setState","_this2","list","props","items","map","idx","key","flexDirection","e","keyCode","toggleOpen","Component","connect","dispatch","ItemInteractions","Backpack","itemSelected","components_inventory","handleItemSelected","addSilver","addCopper","addCurrency","Math","floor","innerWidth","innerHeight","GRID_WIDTH","GRID_HEIGHT","MAX_ROOMS","ROOM_SIZE_RANGE","game_map_creator","placeCells","_ref2","_ref2$width","_ref2$height","i","j","c","push","opacity","_","random","_c$ROOM_SIZE_RANGE","min","max","firstRoom","growMap","seedRooms","counter","maxRooms","_ref3","range","_range","roomValues","north","doorx","doory","east","south","west","placedRooms","forEach","room","_ref$width","_ref$height","isValidRoomPlacement","createRoomsFromSeed","pop","apply","weaponTypes","shieldTypes","enemyTypes","1","2","3","4","5","neutralCreatures","armour","speed","accuracy","treaure","cost","potionTypes","modifies","by","npcTypes","description","profession","npcTypes_ref","portrait","selected","greetings","entity_creator","gameMap","bosses","npcTrader","filter","npc","toLowerCase","npcs","enemies","neutral","neutralTypes","healthPotion","potion","potions","weapons","qualifyingWeapons","assign","shields","qualifyingShields","addXP","changeEntity","changePlayerPosition","createLevel","populateEntities","createMap","modifyHealth","newMessage","restart","setDungeonLevel","setEndGame","resetDungeon","src_actions","vector","getState","_getState","_grid$playerPosition$","slice","_grid$playerPosition$2","_vector","vectorX","vectorY","newPosition","newPlayer","destination","actions","playerLevel","enemyDamageTaken","playerDamageTaken","setTimeout","batchActions","oldDungeon","newDungeonState","addShield","components_cell","cell","distance","visible","zone","opacityValue","getCreditsAsCopper","itemTradeFail","tradeItem","buyer","seller","myTotalCopper","itemTotalCopper","newPlayerCurrency","newTotalCopper","goldRemainder","getPlayerCurrencyAfterBuy","newPlayerInventory","npcSoldItem","message","Player","_this$props$cellProps","cellProps","lookAround","entitiesBesideMe","row","closeByEntities","distanceFromPlayer","group","getNPCsAroundMe","talkToNPC","about","Grid","viewportWidth","viewportHeight","handleResize","VP_HEIGHT_OFFSET","VP_MINIMUM_HEIGHT","VP_WIDTH_RATIO","VP_HEIGHT_RATIO","throttle","debounce","triggerOpeningMessages","playerInput","target","_this$props$grid$play","playerX","playerY","top","clamp","right","bottom","left","cells","abs","playerCellProps","containers_player","header","stripClass","show","msg","storeItem","scope","displayCost","rowStle","flexDireciton","justifyContent","Store","randomIdx","storeOwner","conversation","selectedItem","self","selectedNPC","_this$props","handleSelectItemClick","handleBuyItemClick","defaultItems","NPCStore","nextProps","handleSelectNPC","getPickNPC","store","getStore","PlayerSettings","restartGame","toggleFogMode","onChange","checked","htmlFor","score","value","scoreboard","panelClass","classes","_default","tips","displayIdx","intervalId","setInterval","clearInterval","sidebarClass","app","game","npc_store","class","backpack","player_settings","containers_messages","tips_default","require","loggerMiddleware","createLogger","actionTransformer","reduce","result","next","createStoreWithMiddleware","applyMiddleware","thunk","createStore","ReactDOM","render","lib","enableBatching","reducers","containers_DungeonCrawler","document","getElementById"],"mappings":"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","file":"static/js/main.b3998d57.chunk.js","sourcesContent":["// PLAYER\nexport const ADD_GOLD = 'ADD_GOLD';\nexport const REMOVE_GOLD = 'REMOVE_GOLD';\nexport const ADD_SILVER = 'ADD_SILVER';\nexport const REMOVE_SILVER = 'REMOVE_SILVER';\nexport const ADD_COPPER = 'ADD_COPPER';\nexport const REMOVE_COPPER = 'REMOVE_COPPER';\nexport const ADD_WEAPON = 'ADD_WEAPON';\nexport const REMOVE_WEAPON = 'REMOVE_WEAPON';\nexport const ADD_SHIELD = 'ADD_SHIELD';\nexport const REMOVE_SHIELD = 'REMOVE_SHIELD';\nexport const ADD_XP = 'ADD_XP';\nexport const CHANGE_ENTITY = 'CHANGE_ENTITY';\nexport const CHANGE_PLAYER_POSITION = 'CHANGE_PLAYER_POSITION';\nexport const CREATE_LEVEL = 'CREATE_LEVEL';\nexport const MODIFY_HEALTH = 'MODIFY_HEALTH';\nexport const NEW_MESSAGE = 'NEW_MESSAGE';\nexport const PLAYER_BOUGHT_ITEM = 'PLAYER_BOUGHT_ITEM';\nexport const PLAYER_SOLD_ITEM = 'PLAYER_SOLD_ITEM';\nexport const PLAYER_TRADE_SUCCESS = 'PLAYER_TRADE_SUCCESS';\nexport const PLAYER_TRADE_FAIL = 'PLAYER_TRADE_FAIL';\nexport const INTERACT_WITH_NEUTRAL = 'INTERACT_WITH_NEUTRAL';\nexport const TALK_TO_NPC = 'TALK_TO_NPC';\n\n// GENERAL\nexport const RESTART = 'RESTART';\nexport const TOGGLE_FOG_MODE = 'TOGGLE_FOG_MODE';\nexport const LOOK_AROUND = 'LOOK_AROUND';\nexport const LEVEL_EXIT = 'LEVEL_EXIT';\nexport const LEVEL_ENTER = 'LEVEL_ENTER';\n\n// DUNGEON\nexport const RESET_DUNGEON = 'RESET_DUNGEON';\nexport const SET_END_GAME = 'SET_END_GAME';\nexport const UPDATE_DUNGEON = 'UPDATE_DUNGEON';\nexport const SET_DUNGEON_LEVEL = 'SET_DUNGEON_LEVEL';\n\n// NPC\nexport const TOGGLE_NPC_STORE = 'TOGGLE_NPC_STORE';\nexport const SELECT_NPC = 'SELECT_NPC';\nexport const NPC_BOUGHT_ITEM = 'NPC_BOUGHT_ITEM';\nexport const NPC_SOLD_ITEM = 'NPC_SOLD_ITEM';\nexport const NPC_TRADED_ITEM = 'NPC_TRADED_ITEM';\n\n","const dungeonTypes = [\n  { id: 0,\n    name: \"Bellwoods\",\n    exits: 1,\n    exitsComplete: 0,\n    questsComplete: 0,\n    type: 'dungeon',\n  },\n  { id: 1,\n    name: \"Bellwoods\",\n    exits: 2,\n    exitsComplete: 0,\n    questsComplete: 0,\n    type: 'dungeon',\n  },\n  { id: 2,\n    name: \"Bellwoods\",\n    exits: 5,\n    exitsComplete: 0,\n    questsComplete: 0,\n    type: 'dungeon',\n  },\n  { id: 3,\n    name: \"Bellwoods\",\n    exits: 5,\n    exitsComplete: 0,\n    questsComplete: 0,\n    type: 'dungeon',\n  },\n  { id: 4,\n    name: \"Bellwoods\",\n    exits: 5,\n    exitsComplete: 0,\n    questsComplete: 0,\n    type: 'dungeon',\n  },\n]\n\nexport default dungeonTypes;\n","import update from 'react-addons-update';\nimport * as t from '../constants/action-types';\nimport dungeonTypes from '../types/dungeonTypes';\n\nconst initialState = {\n\tentities: [[]],\n\tdungeonLevel: 0,\n\tdungeonTransit: 0, // when changing zones, this moves from a number like 2 to a string like 'transit-2' affecting the Cell\n\tdungeon: {...dungeonTypes[0]},\n\tplayerPosition: [],\n\tendGame: \"unknown\",\n};\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase t.CHANGE_ENTITY: {\n\t\t\tconst [x, y] = payload.coords;\n\t\t\tconst entities =\tupdate(state.entities, {\n\t\t\t\t[y]: {\n\t\t\t\t\t[x]: {$set: payload.entity }\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn { ...state, entities };\n\t\t}\n\t\tcase t.CHANGE_PLAYER_POSITION:\n\t\t\treturn { ...state, playerPosition: payload };\n\t\tcase t.SET_END_GAME:\n\t\t\t\treturn { ...state, endGame: payload };\n\t\tcase t.CREATE_LEVEL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayerPosition: payload.playerPosition,\n\t\t\t\tentities: payload.entities\n\t\t\t};\n\t\tcase t.UPDATE_DUNGEON:\n\t\t\t\treturn { ...state, dungeon: payload };\n\t\tcase t.SET_DUNGEON_LEVEL:\n\t\t\treturn { ...state, dungeonLevel: payload.level, dungeon: dungeonTypes[payload.level - 1], dungeonTransit: payload.transit };\n\t\tcase t.RESET_DUNGEON:\n\t\t\t\treturn { ...state, dungeonLevel: 0, dungeon: dungeonTypes[0] };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import * as t from '../constants/action-types';\n\nconst initialState = {\n\thealth: 100,\n\txp: 100,\n\tgold: 0,\n\tcurrency: {\n\t\tgold: 0,\n\t\tsilver: 0,\n\t\tcopper: 500\n\t},\n\tweapon: {\n\t\tname: 'Fist',\n\t\tdamage: 100\n\t},\n\tshield: {\n\t\tname: 'Pants',\n\t\tprotection: 1\n\t},\n\texamining: {\n\t\ticonClass: \"floor\",\n\t\ttitle: \"\",\n\t\taction: \"Look\",\n\t\taroundMe: \"press l to look around\",\n\t},\n\tinventory: [], // as a mechanic I want to limit the investory to 6 items\n\tnpcsAroundMe: [],\n};\n\nexport default (state = initialState, { type, payload }) => {\n\tconst currency = state.currency;\n\tswitch (type) {\n\t\tcase t.TALK_TO_NPC:\n\t\t\treturn { ...state, npcsAroundMe: payload.npcsAroundMe};\n\t\tcase t.PLAYER_BOUGHT_ITEM:\n\t\t\t\treturn { ...state, currency: payload.currency, inventory: payload.inventory};\n\t\tcase t.PLAYER_SOLD_ITEM:\n\t\t\treturn { ...state, currency: payload.currency, inventory: payload.inventory};\n\t\tcase t.ADD_GOLD:\n\t\t\treturn { ...state, currency: {...currency, gold: payload }};\n\t\tcase t.REMOVE_GOLD:\n\t\t\treturn { ...state, currency: {...currency, gold: payload }};\n\t\tcase t.ADD_SILVER:\n\t\t\treturn { ...state, currency: {...currency, silver: payload }};\n\t\tcase t.REMOVE_SILVER:\n\t\t\treturn { ...state, currency: {...currency, silver: payload }};\n\t\tcase t.ADD_COPPER:\n\t\t\treturn { ...state, currency: {...currency, copper: payload }};\n\t\tcase t.REMOVE_COPPER:\n\t\t\treturn { ...state, currency: {...currency, copper: payload }};\n\t\tcase t.ADD_WEAPON:\n\t\t\treturn { ...state, weapon: payload };\n\t\tcase t.ADD_SHIELD:\n\t\t\treturn { ...state, shield: payload };\n\t\tcase t.ADD_XP:\n\t\t\treturn { ...state, xp: state.xp + payload };\n\t\tcase t.MODIFY_HEALTH:\n\t\t\treturn { ...state, health: payload };\n\t\tcase t.RESTART:\n\t\t\treturn initialState;\n\t\tcase t.LOOK_AROUND:\n\t\t  const examining = state.examining;\n\t\t\treturn { ...state, examining: {...examining, ...payload} };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","\n/*\nheadwinds\n\nneed to fix issue where dialog with NPC is hidden behind scoreboard\n\n*/\n\nconst headwinds = {\n  TIPS_ALONG_BOTTOM: false,\n  GAME_SHOW_TITLE: false,\n  VP_TYPE: \"full\",\n  FOG_MODE: false,\n  GAME_TITLE: \"Cabin Quest\",\n  GAME_SUBTITLE: \" explore time between city and country\",\n  GAME_URL: \"https://cabinquest.now.sh\",\n  MAX_INVENTORY_ITEMS: 6,\n}\n\nconst peted = {\n  TIPS_ALONG_BOTTOM: true,\n  GAME_SHOW_TITLE: true,\n  VP_TYPE: \"contained\",\n  FOG_MODE: true,\n  GAME_TITLE: \"THE GRID\",\n  GAME_SUBTITLE: \"- Roguelike\",\n  GAME_URL: \"https://thepeted.github.io/dungeon-crawler\",\n  MAX_INVENTORY_ITEMS: 6,\n}\n\nconst currentConfig = peted;\n\nconst config = {\n  VP_WIDTH_RATIO_CONTAINED : 30,\n  VP_HEIGHT_RATIO_CONTAINED : 21,\n  VP_HEIGHT_RATIO_FULL: 1,\n  VP_WIDTH_RATIO_FULL: 1,\n  FULL_GRID_RATIO_WIDTH: 24,\n  FULL_GRID_RATIO_HEIGHT: 19,\n  VP_TYPE: currentConfig.VP_TYPE, // full or contained,\n  GAME_TITLE: currentConfig.GAME_TITLE,\n  GAME_SUBTITLE: currentConfig.GAME_SUBTITLE,\n  GAME_SHOW_TITLE: currentConfig.GAME_SHOW_TITLE,\n  TIPS_ALONG_BOTTOM: currentConfig.TIPS_ALONG_BOTTOM,\n  FOG_MODE: currentConfig.FOG_MODE,\n  CURRENCY_GOLD_LABEL: \"Gold\",\n  CURRENCY_SILVER_LABEL: \"Silver\",\n  CURRENCY_COPPER_LABEL: \"Copper\",\n  GAME_URL: currentConfig.GAME_URL,\n  MAX_INVENTORY_ITEMS: currentConfig.MAX_INVENTORY_ITEMS,\n}\n\nexport default config;\n","import * as t from '../constants/action-types';\nimport config from '../config.js';\n\nconst messages = [];\n\nconst initialState = {\n\tfogMode: config.FOG_MODE,\n\tmessages,\n\tshowNPCStore: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase t.NEW_MESSAGE:\n\t\t\treturn { ...state, messages: [ ...state.messages, payload ]};\n\t\tcase t.TOGGLE_FOG_MODE:\n\t\t\treturn { ...state, fogMode: !state.fogMode };\n\t\tcase t.TOGGLE_NPC_STORE:\n\t\t\t\treturn { ...state, fogMode: !state.showNPCStore };\t\n\t\tcase t.RESTART:\n\t\t\treturn initialState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport grid from './grid';\nimport player from './player';\nimport ui from './ui';\n\nconst rootReducer = combineReducers({ grid, player, ui });\n\nexport default rootReducer;\n","import React from 'react';\n\nexport default ({ item, handleMouseOver, handleMouseOut, handleClick  }) => {\nconsole.log(\"item render: \", item);\n\n\treturn (\n\t\t<div\n\t\t\t\t onMouseOver={handleMouseOver}\n\t\t\t\t onMouseOut={handleMouseOut}\n\t\t\t\t onClick={handleClick}\n\t\t\t\t className={item.type}\n\t\t\t\t style={{display: \"block\",\n\t\t\t\t\t\t\t\t position: \"relative\",\n\t\t\t\t\t\t\t\t border: \"1px solid #333\",\n\t\t\t\t\t\t\t\t margin: 5,\n\t\t\t\t\t\t\t\t width: 25,\n\t\t\t\t\t\t\t\t height: 25}}>\n    </div>\n\t);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Item from './inventory-item';\n\nclass Inventory extends Component {\n\tconstructor() {\n\t\tsuper();\n\n    this.state = {\n        isOpen: false\n    }\n\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyPress);\n\t}\n\n  toggleOpen(){\n\n    const isOpen = !this.state.isOpen;\n\n    this.setState({isOpen})\n  }\n\n\thandleMouseOver(){\n\n\t}\n\n\thandleMouseOut(){\n\n\t}\n\n\thandleClick(){\n\n\t}\n\n\n\trender() {\n\t\tconst { items } = this.props;\n\t\tconst list = items.map((item, idx) => {\n\t\t\t\treturn (<Item key={idx} \n\t\t\t\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.handleMouseOver}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOut={this.handleMouseOver}\n\t\t\t\t\t\t\t\t\t\t\thandleClick={this.handleClick}></Item>)\n\t\t})\n\n\t\treturn (\n\t\t\t<div style={{display: \"flex\", flexDirection: \"row\"}}>\n\t\t\t\t{list}\n\t\t\t</div>\n\t\t);\n\t}\n\thandleKeyPress(e) {\n    console.log(\"keyCode: \", e.keyCode);\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 73:\n\t\t\t  this.toggleOpen();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nconst mapStateToProps = ({player}) => {\n\treturn {player};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inventory);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass ItemInteractions extends Component {\n\tconstructor() {\n\t\tsuper();\n\n    this.state = {\n        isOpen: false\n    }\n\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyPress);\n\t}\n\n  toggleOpen(){\n\n    const isOpen = !this.state.isOpen;\n\n    this.setState({isOpen})\n  }\n\n\thandleMouseOver(){\n\n\t}\n\n\thandleMouseOut(){\n\n\t}\n\n\thandleEquipClick(item){\n\n\t}\n\n\thandleDiscardClick(item){\n\n\t}\n\n\thandleTradeClick(item){\n\n\t}\n\n\thandleCraftClick(item){\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t);\n\t}\n\thandleKeyPress(e) {\n\n\t\t// equip or discard item...\n\n    console.log(\"keyCode: \", e.keyCode);\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 73:\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nconst mapStateToProps = ({player}) => {\n\treturn {player};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemInteractions);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Inventory from '../components/inventory';\nimport ItemInteractions from '../components/item-interactions';\n\nclass Backpack extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\titemSelected: null, \n\t\t}\n\n\t}\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentWillUnmount() {\n\n\t}\n\n\thandleItemSelected(){\n\n\t}\n\n\trender() {\n\t\tconst { player } = this.props;\n    console.log(\"Backpack render: \", player.inventory);\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<Inventory items={player.inventory} handleItemSelected={this.handleItemSelected} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({player}) => {\n\treturn {player};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Backpack);\n","import _ from 'lodash';\nimport { batchActions } from 'redux-batched-actions';\nimport * as t from '../constants/action-types';\n\nfunction addGold(payload) {\n\treturn {\n\t\ttype: t.ADD_GOLD,\n\t\tpayload\n\t};\n}\n\nfunction addSilver(payload) {\n\treturn {\n\t\ttype: t.ADD_SILVER,\n\t\tpayload\n\t};\n}\n\nfunction addCopper(payload) {\n\treturn {\n\t\ttype: t.ADD_COPPER,\n\t\tpayload\n\t};\n}\n\nfunction removeGold(payload) {\n\treturn {\n\t\ttype: t.REMOVE_GOLD,\n\t\tpayload\n\t};\n}\n\nfunction removeSilver(payload) {\n\treturn {\n\t\ttype: t.REMOVE_SILVER,\n\t\tpayload\n\t};\n}\n\nfunction removeCopper(payload) {\n\treturn {\n\t\ttype: t.REMOVE_COPPER,\n\t\tpayload\n\t};\n}\n\nexport function addCurrency(player, entity){\n\tswitch(entity.level) {\n\t\tcase 1 :\n\t\t\treturn addCopper(10 + player.currency.copper);\n\t\tcase 2 :\n\t\t\taddCopper(10 + player.currency.copper);\n\t\t\treturn addSilver(1 + player.currency.silver);\n\t\tcase 2 :\n\t\t\taddCopper(100 + player.currency.copper);\n\t\t\treturn addSilver(5 + player.currency.silver);\n\t\tcase 3 :\n\t\t\taddCopper(25 + player.currency.copper);\n\t\t\treturn addSilver(10 + player.currency.silver);\n\t\tcase 4 :\n\t\t\taddCopper(5 + player.currency.copper);\n\t\t\taddSilver(100 + player.currency.silver);\n\t\t\treturn addGold(1 + player.currency.gold);\n\t\tdefault :\n\t\t\treturn addCopper(10 + player.currency.copper);\n\t}\n\n}\n\nexport function removeCurrency(player, entity){\n\n}\n","import config from '../config.js';\n\nconst width = (config.VP_TYPE === \"full\") ? Math.floor(window.innerWidth / config.FULL_GRID_RATIO_WIDTH) : 80; //(config.VP_TYPE === \"full\") ? 100 : 80;\nconst height = (config.VP_TYPE === \"full\") ? Math.floor(window.innerHeight / config.FULL_GRID_RATIO_HEIGHT) : 60;\n\nexport const GRID_WIDTH = width;\nexport const GRID_HEIGHT = height;\nexport const MAX_ROOMS = (config.VP_TYPE === \"full\") ? 25 : 15;\nexport const ROOM_SIZE_RANGE = [7, 12];\nexport const CELL_SIZE = 10; // not used yet...\n","import _ from 'lodash';\nimport * as c from '../constants/settings';\n\nexport default () => {\n\t// HELPER FUNCTIONS FOR CREATING THE MAP\n\tconst isValidRoomPlacement = (grid, {x, y, width = 1, height = 1}) => {\n\t\t// check if on the edge of or outside of the grid\n\t\tif (y < 1 || y + height > grid.length - 1) {\n\t\t\treturn false;\n\t\t}\n\t\tif (x < 1 || x + width > grid[0].length - 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check if on or adjacent to existing room\n\t\tfor (let i = y - 1; i < y + height + 1; i++) {\n\t\t\tfor (let j = x - 1; j < x + width + 1; j++) {\n\t\t\t\tif (grid[i][j].type === 'floor') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// all grid cells are clear\n\t\treturn true;\n\t};\n\n\tconst placeCells = (grid, {x, y, width = 1, height = 1}, type = 'floor') => {\n\t\tfor (let i = y; i < y + height; i++) {\n\t\t\tfor (let j = x; j < x + width; j++) {\n\t\t\t\tgrid[i][j] = {type};\n\t\t\t}\n\t\t}\n\t\treturn grid;\n\t};\n\n\tconst createRoomsFromSeed = (grid, {x, y, width, height}, range = c.ROOM_SIZE_RANGE) => {\n\t\t// range for generating the random room heights and widths\n\t\tconst [min, max] = range;\n\n\t\t// generate room values for each edge of the seed room\n\t\tconst roomValues = [];\n\n\t\tconst north = { height: _.random(min, max), width: _.random(min, max) };\n\t\tnorth.x = _.random(x, x + width - 1);\n\t\tnorth.y = y - north.height - 1;\n\t\tnorth.doorx = _.random(north.x, (Math.min(north.x + north.width, x + width)) - 1);\n\t\tnorth.doory = y - 1;\n\t\troomValues.push(north);\n\n\t\tconst east = { height: _.random(min, max), width: _.random(min, max) };\n\t\teast.x = x + width + 1;\n\t\teast.y = _.random(y, height + y - 1);\n\t\teast.doorx = east.x - 1;\n\t\teast.doory = _.random(east.y, (Math.min(east.y + east.height, y + height)) - 1);\n\t\troomValues.push(east);\n\n\t\tconst south = { height: _.random(min, max), width: _.random(min, max) };\n\t\tsouth.x = _.random(x, width + x - 1);\n\t\tsouth.y = y + height + 1;\n\t\tsouth.doorx = _.random(south.x, (Math.min(south.x + south.width, x + width)) - 1);\n\t\tsouth.doory = y + height;\n\t\troomValues.push(south);\n\n\t\tconst west = { height: _.random(min, max), width: _.random(min, max) };\n\t\twest.x = x - west.width - 1;\n\t\twest.y = _.random(y, height + y - 1);\n\t\twest.doorx = x - 1;\n\t\twest.doory = _.random(west.y, (Math.min(west.y + west.height, y + height)) - 1);\n\t\troomValues.push(west);\n\n\t\tconst placedRooms = [];\n\t\troomValues.forEach(room => {\n\t\t\tif (isValidRoomPlacement(grid, room)) {\n\t\t\t\t// place room\n\t\t\t\tgrid = placeCells(grid, room);\n\t\t\t\t// place door\n\t\t\t\tgrid = placeCells(grid, {x: room.doorx, y: room.doory}, 'door');\n\t\t\t\t// need placed room values for the next seeds\n\t\t\t\tplacedRooms.push(room);\n\t\t\t}\n\t\t});\n\t\treturn {grid, placedRooms};\n\t};\n\n\t// BUILD OUT THE MAP\n\n\t// 1. make a grid of 'empty' cells, with a random opacity value (for styling)\n\tlet grid = [];\n\tfor (let i = 0; i < c.GRID_HEIGHT; i++) {\n\t\tgrid.push([]);\n\t\tfor (let j = 0; j < c.GRID_WIDTH; j++) {\n\t\t\tgrid[i].push({type: 0, opacity: _.random(0.3, 0.8)});\n\t\t}\n\t}\n\n\t// 2. random values for the first room\n\tconst [min, max] = c.ROOM_SIZE_RANGE;\n\tconst firstRoom = {\n\t\tx: _.random(1, c.GRID_WIDTH - max - 15),\n\t\ty: _.random(1, c.GRID_HEIGHT - max - 15),\n\t\theight: _.random(min, max),\n\t\twidth: _.random(min, max)\n\t};\n\n\t// 3. place the first room on to grid\n\tgrid = placeCells(grid, firstRoom);\n\n\t// 4. using the first room as a seed, recursivley add rooms to the grid\n\tconst growMap = (grid, seedRooms, counter = 1, maxRooms = c.MAX_ROOMS) => {\n\t\tif (counter + seedRooms.length > maxRooms || !seedRooms.length) {\n\t\t\treturn grid;\n\t\t}\n\n\t\tgrid = createRoomsFromSeed(grid, seedRooms.pop());\n\t\tseedRooms.push(...grid.placedRooms);\n\t\tcounter += grid.placedRooms.length;\n\t\treturn growMap(grid.grid, seedRooms, counter);\n\t};\n\treturn growMap(grid, [firstRoom]);\n};\n","const weaponTypes = [\n  {\n    name: 'Big Stick',\n    damage: 10\n  },\n  {\n    name: 'Club',\n    damage: 15\n  },\n  {\n    name: 'Rusty Sword',\n    damage: 20\n  },\n  {\n    name: 'Butcher Knife',\n    damage: 25\n  },\n  {\n    name: 'Mace',\n    damage: 30\n  },\n  {\n    name: 'Flail',\n    damage: 35\n  },\n  {\n    name: 'Long Sword',\n    damage: 40\n  },\n  {\n    name: 'Broad Sword',\n    damage: 50\n  }\n];\n\nexport default weaponTypes;\n","const shieldTypes = [\n  {\n    name: 'Hat',\n    protection: 1,\n    type: 'shield',\n  },\n  {\n    name: 'Bracers',\n    protection: 5,\n    type: 'shield',\n  },\n  {\n    name: 'Rusty Shield',\n    protection: 10,\n    type: 'shield',\n  },\n  {\n    name: 'Wooden Shield',\n    protection: 12,\n    type: 'shield',\n  },\n  {\n    name: 'Leather Shield',\n    protection: 20,\n    type: 'shield',\n  },\n  {\n    name: 'Chain Shield',\n    protection: 25,\n    type: 'shield',\n  },\n  {\n    name: 'Plate Shield',\n    protection: 40,\n    type: 'shield',\n  },\n  {\n    name: 'Elven Shield',\n    protection: 50,\n    type: 'shield',\n  }\n];\n\nexport default shieldTypes;\n","// actors should be imported\n\nconst enemy = {\n  type: \"enemy\",\n  name: \"\",\n  health: 100,\n  weapon: \"\",\n  armour: \"\",\n  speed: 10,\n  accuracy: 10,\n}\n\nconst enemyTypes = {\n  1:\"Rat\",\n  2:\"Kobold\",\n  3:\"Dark Elf\",\n  4:\"Troll\",\n  5:\"Boss\"\n}\n\nexport default enemyTypes;\n","// actors should be imported\n\nconst neutralType = {\n  type: \"neutral\",\n  name: \"\",\n  health: 100,\n  weapon: \"\",\n  armour: \"\",\n  speed: 10,\n  accuracy: 10,\n  treaure: []\n}\n\nconst neutralCreatures = [\n  {\n    type: \"neutral\",\n    name: \"Jack Rabbit\",\n    health: 5,\n    weapon: {name: \"teeth\", protection: 1},\n    armour: {name: \"fur\", protection: 10},\n    speed: 1,\n    accuracy: 1,\n    treaure: [{name: \"pelt\", cost: {gold: 0, silver: 0, copper: 5}}]\n  },\n  {\n    type: \"neutral\",\n    name: \"Cariboo\",\n    health: 25,\n    weapon: {name: \"horns\", damage: 100},\n    armour: {name: \"fur\", protection: 10},\n    speed: 10,\n    accuracy: 10,\n    treaure: [{name: \"hide\", cost: {gold: 0, silver: 0, copper: 25}}]\n  },\n  {\n    type: \"neutral\",\n    name: \"Buffalo\",\n    health: 1225,\n    weapon: {name: \"horns\", damage: 100},\n    armour: {name: \"fur\", protection: 1},\n    speed: 10,\n    accuracy: 100,\n    treaure: [{name: \"hide\", cost: {gold: 1, silver: 10, copper: 25}}]\n  }\n]\n\nexport default neutralCreatures;\n","const potionTypes = [\n  {\n    name: 'Health Potion',\n    modifies: \"health\",\n    by: 10,\n    type: 'potion',\n  }\n];\n\nexport default potionTypes;\n","import weaponTypes from './weaponTypes';\nimport shieldTypes from './shieldTypes';\nimport potionTypes from './potionTypes';\n\nconst defaultItems = [\n\t{name: \"sword\", cost: 30, cost: { gold: 0, silver: 0, copper: 30}, type: \"weapon\"},\n\t{name: \"health potion\", cost: { gold: 0, silver: 0, copper: 30}, type: \"potion\"},\n\t{name: \"shield\", cost: 30, cost: { gold: 0, silver: 0, copper: 30}, type: \"shield\"},\n]\n\nconst npcTypes = [\n  {\n    name: 'Alspen',\n    description: '',\n    profession: 'Trader',\n    inventory: defaultItems,\n    type: 'npc',\n    portrait: '',\n    selected: false,\n    greetings: [\"I have the best deals.\"]\n  },\n];\n\nexport default npcTypes;\n","import _ from 'lodash';\nimport * as c from '../constants/settings';\nimport weaponTypes from '../types/weaponTypes';\nimport shieldTypes from '../types/shieldTypes';\nimport enemyTypes from '../types/enemyTypes';\nimport neutralTypes from '../types/neutralTypes';\nimport potionTypes from '../types/potionTypes';\nimport npcTypes from '../types/npcTypes';\n\nexport default (gameMap, level = 1) => {\n\t// 1. create the entities\n\tconst bosses = [];\n\tif (level === 4) {\n\t\tbosses.push({\n\t\t\thealth: 400,\n\t\t\tlevel: 5,\n\t\t\ttype: 'boss'\n\t\t});\n\t}\n\n\tconst npcTrader = npcTypes.filter( npc => npc.profession.toLowerCase() === \"trader\")[0];\n\tconst npcs = [];\n\tfor (let i = 0; i < 30; i++) {\n\t\tnpcs.push({...npcTrader}); // if you don't use spread, it will create an immutable tile and the distance calc will fail\n\t}\n\n\tconst enemies = [];\n\tfor (let i = 0; i < 7; i++) {\n\t\tenemies.push({\n\t\t\thealth: level * 30 + 40,\n\t\t\t// half of the enememies will be a level higher or lower (except on\n\t\t\t// level 1, where ~1/4 enemies are a level higher)\n\t\t\tlevel: _.random(level, _.random(level - 1 ? level - 1 : level, level + 1)),\n\t\t\ttype: 'enemy',\n\t\t\tname: enemyTypes[level]\n\t\t});\n\t}\n\n\t// not enemies but will attack if attacked \n\t// animals like deer can be farmed  \n\t// but should be able pass by any neutral without combat \n\tconst neutral = [];\n\tfor (let i = 0; i < 7; i++) {\n\t\tneutral.push({\n\t\t\thealth: level * 30 + 40,\n\t\t\t// half of the enememies will be a level higher or lower (except on\n\t\t\t// level 1, where ~1/4 enemies are a level higher)\n\t\t\tlevel: _.random(level, _.random(level - 1 ? level - 1 : level, level + 1)),\n\t\t\ttype: 'neutral',\n\t\t\tname: neutralTypes[level]\n\t\t});\n\t}\n\n\tconst exits = [];\n\tif (level < 4) {\n\t\texits.push({\n\t\t\ttype: 'exit'\n\t\t});\n\t}\n\n\tconst players = [\n\t\t{\n\t\t\ttype: 'player'\n\t\t}\n\t];\n\n\tconst healthPotion = potionTypes.filter( potion => potion.modifies === \"health\")[0];\n\tconst potions = [];\n\tfor (let i = 0; i < 5; i++) {\n\t\tpotions.push({...healthPotion});\n\t}\n\n\tconst weapons = [];\n\t// weapon types will vary based on the level passed to the parent function\n\tconst qualifyingWeapons = weaponTypes\n\t\t.filter(weapon => weapon.damage < level * 10 + 10)\n\t\t\t.filter(weapon => weapon.damage > level * 10 - 10);\n\tfor (let i = 0; i < 3; i++) {\n\t\tconst weapon = Object.assign({}, qualifyingWeapons[_.random(0, qualifyingWeapons.length - 1)]);\n\t\tweapon.type = 'weapon';\n\t\tweapons.push(weapon);\n\t}\n\n\tconst shields = [];\n\t// shields act like weapons except add protection instead of damage\n\tconst qualifyingShields = shieldTypes\n\t\t.filter(shield => shield.protection < level * 10 + 10)\n\t\t\t.filter(shield => shield.protection > level * 10 - 10);\n\tfor (let i = 0; i < 3; i++) {\n\t\tconst shield = Object.assign({}, qualifyingShields[_.random(0, qualifyingShields.length - 1)]);\n\t\tshield.type = 'shield';\n\t\tshields.push(shield);\n\t}\n\n\t// 2. randomly place all the entities on to floor cells on the game map.\n\n\t// we'll need to return the players starting co-ordinates\n\tlet playerPosition = [];\n\t[\tpotions,\n\t\tenemies,\n\t\tneutral,\n\t\tweapons,\n\t\tshields,\n\t\texits,\n\t\tplayers,\n\t\tnpcs,\n\t\tbosses].forEach(entities => {\n\t\twhile (entities.length) {\n\t\t\tconst x = Math.floor(Math.random() * c.GRID_WIDTH);\n\t\t\tconst y = Math.floor(Math.random() * c.GRID_HEIGHT);\n\t\t\tif (gameMap[y][x].type === 'floor') {\n\t\t\t\tif (entities[0].type === 'player') {\n\t\t\t\t\tplayerPosition = [x, y];\n\t\t\t\t}\n\t\t\t\tgameMap[y][x] = entities.pop();\n\t\t\t}\n\t\t}\n\t});\n\n\t// 3. we can now replace doors with floors\n\t// what do doors look like? do they need keys? do they hide what's behind them?!\n\t// So they don't hide the contents behind them and they act like potions meaning they disappear when crossed.\n\t// we should implement doors that hide the things inside when closed and some doors should be locked requiring the right key\n\tfor (let i = 0; i < gameMap.length; i++) {\n\t\tfor (let j = 0; j < gameMap[0].length; j++) {\n\t\t\tif (gameMap[i][j].type === 'door') {\n\t\t\t \tgameMap[i][j].type = 'floor';\n\t\t\t}\n\t\t}\n\t}\n\treturn {entities: gameMap, playerPosition};\n};\n","import _ from 'lodash';\nimport { batchActions } from 'redux-batched-actions';\nimport { addCurrency, removeCurrency } from './currency';\nimport createMap from '../bin/game-map-creator';\nimport populateEntities from '../bin/entity-creator';\nimport * as t from '../constants/action-types';\n\nfunction addShield(payload) {\n\treturn {\n\t\ttype: t.ADD_SHIELD,\n\t\tpayload\n\t};\n}\n\nfunction removeShield(payload) {\n\treturn {\n\t\ttype: t.REMOVE_SHIELD,\n\t\tpayload\n\t};\n}\n\nfunction addWeapon(payload) {\n\treturn {\n\t\ttype: t.ADD_WEAPON,\n\t\tpayload\n\t};\n}\n\nfunction removeWeapon(payload) {\n\treturn {\n\t\ttype: t.REMOVE_WEAPON,\n\t\tpayload\n\t};\n}\n\nfunction addXP(payload) {\n\treturn {\n\t\ttype: t.ADD_XP,\n\t\tpayload\n\t};\n}\n\nfunction changeEntity(entity, coords) {\n\treturn {\n\t\ttype: t.CHANGE_ENTITY,\n\t\tpayload: { entity, coords }\n\t};\n}\n\nfunction changePlayerPosition(payload) {\n\treturn {\n\t\ttype: t.CHANGE_PLAYER_POSITION,\n\t\tpayload\n\t};\n}\n\nexport function createLevel(level) {\n\treturn {\n\t\ttype: t.CREATE_LEVEL,\n\t\tpayload: populateEntities(createMap(), level)\n\t};\n}\n\nfunction modifyHealth(payload) {\n\treturn {\n\t\ttype: t.MODIFY_HEALTH,\n\t\tpayload\n\t};\n}\n\nexport function newMessage(payload) {\n\treturn {\n\t\ttype: t.NEW_MESSAGE,\n\t\tpayload\n\t};\n}\n\nexport function restart() {\n\treturn {\n\t\ttype: t.RESTART\n\t};\n}\n\nexport function updateDungeon(payload) {\n\treturn {\n\t\ttype: t.UPDATE_DUNGEON,\n\t\tpayload\n\t};\n}\n\nexport function setDungeonLevel(level, transit) {\n\treturn {\n\t\ttype: t.SET_DUNGEON_LEVEL,\n\t\tpayload: {\n\t\t\tlevel,\n\t\t\ttransit\n\t\t}\n\t};\n}\n\nexport function setEndGame(payload) {\n\treturn {\n\t\ttype: t.SET_END_GAME,\n\t\tpayload\n\t};\n}\n\nexport function resetDungeon() {\n\treturn {\n\t\ttype: t.RESET_DUNGEON\n\t};\n}\n\nexport function toggleFogMode() {\n\treturn {\n\t\ttype: t.TOGGLE_FOG_MODE\n\t};\n}\n\n// a thunk!\nexport default (vector) => {\n\treturn (dispatch, getState) => {\n\t\tconst { grid, player } = getState();\n\n\t\t// cache some useful variables\n\t\tconst [ x, y ] = grid.playerPosition.slice(0); // get current location\n\t\tconst [ vectorX, vectorY ] = vector; // get direction modifier\n\t\tconst newPosition = [vectorX + x, vectorY + y]; // define where we're moving to\n\t\tconst newPlayer = grid.entities[y][x];\n\t\tconst destination = grid.entities[y + vectorY][x + vectorX]; // whats in the cell we're heading to\n\t\t// store the actions in array to be past to batchActions\n\t\tconst actions = [];\n\n\t\t// move the player unless destination is an enemy or permanent fixture like a wall (cell 0) or building\n\t\tif (destination.type\n\t\t\t\t&& destination.type !== 'enemy'\n\t\t\t\t\t&& destination.type !== 'boss') {\n\n\t\t\t// players should be able to pass through npcs but we don't want to remove them from the game\n\n\t\t\tif (destination.type === 'npc') {\n\t\t\t\tactions.push(\n\t\t\t\t\tchangeEntity({ ...destination }, [x, y]),\n\t\t\t\t\tchangeEntity(newPlayer, newPosition),\n\t\t\t\t\tchangePlayerPosition(newPosition)\n\t\t\t\t);\n\t\t\t}\telse {\n\t\t\t\tactions.push(\n\t\t\t\t\tchangeEntity({ type: 'floor' }, [x, y]),\n\t\t\t\t\tchangeEntity(newPlayer, newPosition),\n\t\t\t\t\tchangePlayerPosition(newPosition)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tswitch (destination.type) {\n\t\t\tcase 'boss':\n\t\t\tcase 'enemy': {\n\t\t\t\tconst playerLevel = Math.floor(player.xp / 100);\n\t\t\t\t// player attacks enemy\n\t\t\t\tconst enemyDamageTaken = Math.floor(player.weapon.damage * _.random(1, 1.3) * playerLevel);\n\t\t\t\tdestination.health -= enemyDamageTaken;\n\n\t\t\t\tif (destination.health > 0) {\n\t\t\t\t\t// enemy attacks player\n\t\t\t\t\tconst playerDamageTaken = Math.floor(_.random(4, 7) * destination.level) - player.shield.protection;\n\n\t\t\t\t\tactions.push(\n\t\t\t\t\t\tchangeEntity(destination, newPosition),\n\t\t\t\t\t\tmodifyHealth(player.health - playerDamageTaken),\n\t\t\t\t\t\tnewMessage(`FIGHT! You hurt the enemy with attack of [${enemyDamageTaken}].\tThe enemy hits back with an attack of [${playerDamageTaken}].  Enemy has [${destination.health}] health remaining.`)\n\t\t\t\t\t);\n\n\t\t\t\t\tif (player.health - playerDamageTaken <= 0) {\n\t\t\t\t\t\t// player dies\n\t\t\t\t\t\tdispatch(modifyHealth(0));\n\t\t\t\t\t\tsetTimeout(() => dispatch(setEndGame('death')), 250);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`YOU DIED`)),\n\t\t\t\t\t\t1000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`Everything goes dark..`)),\n\t\t\t\t\t\t2000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`You resolve to try harder next time`)),\n\t\t\t\t\t\t4000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`The grid resets itself....`)),\n\t\t\t\t\t\t6000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(batchActions([\n\t\t\t\t\t\t\trestart(), createLevel(1), resetDungeon()\n\t\t\t\t\t\t])),\n\t\t\t\t\t\t8000);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (destination.health <= 0) {\n\t\t\t\t\t// the fight is over and the player has won\n\t\t\t\t\t// add XP and move the player\n\t\t\t\t\tif (destination.type === 'boss') {\n\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\taddXP(10 * destination.level),\n\t\t\t\t\t\t\taddCurrency(player, destination),\n\t\t\t\t\t\t\tchangeEntity({ type: 'floor'}, [x, y]),\n\t\t\t\t\t\t\tchangeEntity(newPlayer, newPosition),\n\t\t\t\t\t\t\tchangePlayerPosition(newPosition),\n\t\t\t\t\t\t\tnewMessage(`VICTORY! Your attack of [${enemyDamageTaken}] is too powerful for the enemy, who dissolves before your very eyes.`)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetTimeout(() => dispatch(setEndGame('victory')), 250);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`YOU DEFATED THE BOSS!`)),\n\t\t\t\t\t\t1000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`The BOSS emits an almighty scream`)),\n\t\t\t\t\t\t2000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`You bask momentarily in your glory`)),\n\t\t\t\t\t\t4000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`The grid resets itself....`)),\n\t\t\t\t\t\t6000);\n\t\t\t\t\t\tsetTimeout(() => dispatch(batchActions([\n\t\t\t\t\t\t\trestart(), createLevel(1), resetDungeon()\n\t\t\t\t\t\t])),\n\t\t\t\t\t\t8000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\taddXP(10 * destination.level),\n\t\t\t\t\t\t\taddCurrency(player, destination),\n\t\t\t\t\t\t\tchangeEntity({ type: 'floor'}, [x, y]),\n\t\t\t\t\t\t\tchangeEntity(newPlayer, newPosition),\n\t\t\t\t\t\t\tchangePlayerPosition(newPosition),\n\t\t\t\t\t\t\tnewMessage(`VICTORY! Your attack of [${enemyDamageTaken}] is too powerful for the enemy, who dissolves before your very eyes.`)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`You gain 10XP and feel yourself growing stronger..`)),\n\t\t\t\t\t\t2500);\n\t\t\t\t\t\tif ((player.xp + 10) % 100 === 0) {\n\t\t\t\t\t\t\tsetTimeout(() => dispatch(newMessage(`LEVEL UP!`)), 5000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'exit':\n\n\t\t\t\tif (grid.dungeon.exitsComplete === grid.dungeon.exits) {\n\t\t\t\t\tsetTimeout(() => dispatch(batchActions([\n\t\t\t\t\t\tsetDungeonLevel(grid.dungeonLevel + 1, grid.dungeonLevel + 1),\n\t\t\t\t\t\tcreateLevel(grid.dungeonLevel + 1)\n\t\t\t\t\t])), 3000);\n\t\t\t\t\tactions.push(\n\t\t\t\t\t\tnewMessage(`The cells start to shift... you transit to zone ${grid.dungeonLevel + 1}`)\n\t\t\t\t\t);\n\t\t\t\t\t//do I need this? the transit part causes a bug in the HUD\n\t\t\t\t\tsetTimeout(() => dispatch(setDungeonLevel(grid.dungeonLevel + 1, `transit-${grid.dungeonLevel + 1}`)), 250);\n\t\t\t\t} else {\n\t\t\t\t\tconst oldDungeon = grid.dungeon;\n\t\t\t\t\tconst newDungeonState = {...oldDungeon, exitsComplete: oldDungeon.exitsComplete + 1}\n\n\t\t\t\t\tactions.push(\n\t\t\t\t\t\tnewMessage(`You enter the tunnel and pass into the next zone`)\n\t\t\t\t\t);\n\n\t\t\t\t\tsetTimeout(() => dispatch(batchActions([\n\t\t\t\t\t\tupdateDungeon(newDungeonState),\n\t\t\t\t\t\tcreateLevel(grid.dungeonLevel)\n\t\t\t\t\t])), 250);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'potion':\n\n\t\t\t\t if (destination.modifies === \"health\") {\n\t\t\t\t\t actions.push(\n\t \t\t\t\t\tmodifyHealth(player.health + destination.by),\n\t \t\t\t\t\tnewMessage(`You drink a potion for [${destination.modifies}] health`)\n\t \t\t\t\t);\n\t\t\t\t }\n\n\t\t\t\tbreak;\n\t\t\tcase 'weapon':\n\t\t\t\tactions.push(\n\t\t\t\t\taddWeapon(destination),\n\t\t\t\t\tnewMessage(`You pick up a ${destination.name}`)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'shield':\n\t\t\t\tactions.push(\n\t\t\t\t\taddShield(destination),\n\t\t\t\t\tnewMessage(`You pick up a ${destination.name}`)\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tdispatch(batchActions(actions));\n\t};\n};\n\nexport function openingMessages() {\n\treturn (dispatch) => {\n\t\tdispatch(newMessage(`Welcome to The Grid...`));\n\t\tsetTimeout(() => {\n\t\t\tdispatch(newMessage(`You find yourself in a world filled with strange cells`));\n\t\t}, 3000);\n\t\tsetTimeout(() => {\n\t\t\tdispatch(newMessage(`'Hmm... there must be a way out of here..'`));\n\t\t}, 6000);\n\t};\n}\n\nexport function restartGame() {\n\treturn (dispatch) => {\n\t\tdispatch(newMessage(`The grid resets itself....`));\n\t\tsetTimeout(() => dispatch(batchActions([\n\t\t\trestart(), createLevel(1), resetDungeon()\n\t\t])),\n\t\t1000);\n\t};\n}\n","import React from 'react';\n\nexport default ({ cell, distance, visible, zone, transit }) => {\n\tlet opacityValue = cell.opacity;\n\tif (visible && distance > 10) {\n\t\topacityValue = 0;\n\t} else if (cell.type !== 0) {\n\t\topacityValue = 1;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cell.type ? `${cell.type} cell` : `back-${transit} cell`}\n\t\t\tstyle={{opacity: opacityValue}}\n\t\t\t/>\n\t);\n};\n","export function getCreditsAsCopper(player) {\n\n  console.log(\"getCreditsAsCopper \", player);\n\n  const goldAsCopper = player.currency.gold * 100;\n  const silverAsCopper = player.currency.silver * 10;\n\n  return goldAsCopper + silverAsCopper + player.currency.copper;\n}\n\nexport function displayCost(item) {\n\n  if (item.cost.gold === 0) {\n\n    if (item.cost.copper === 0)  {\n      return \"$\" + item.cost.silver + \" silver\";\n    } else {\n      return \"$\" + item.cost.silver + \" silver \" + item.cost.copper + \" copper\";\n    }\n\n  } else if (item.cost.silver === 0) {\n     return \"$\" + item.cost.copper + \" copper\";\n  } else {\n\n    if (item.cost.silver === 0 && item.cost.copper === 0) {\n      return \"$\" + item.cost.gold + \" gold\";\n    } else if (item.cost.silver === 0) {\n      return \"$\" + item.cost.gold + \" gold \" + item.cost.copper + \" copper\";\n    } else {\n      return \"$\" + item.cost.gold + \" gold \" +\n                item.cost.silver + \" silver \" +\n                item.cost.copper + \" copper\";\n    }\n  }\n\n}\n\nexport function getPlayerCurrencyAfterBuy(newTotalCopper) {\n  // will it be weird to get back a different distribution of gold, silver, copper?!\n  const gold = Math.floor( newTotalCopper / 100);\n  const goldRemainder = newTotalCopper % 100;\n  const silver = Math.floor( goldRemainder / 10);\n  const copper = silver % 10;\n\n  return {gold, silver, copper};\n\n}\n","import _ from 'lodash';\nimport { batchActions } from 'redux-batched-actions';\nimport * as t from '../constants/action-types';\nimport { getCreditsAsCopper, displayCost, getPlayerCurrencyAfterBuy } from '../utils/currency-utils';\nimport { npcSoldItem, npcBoughtItem } from './npc';\nimport {newMessage} from './index';\nimport config from '../config.js';\n\nexport function toggleNPCStore() {\n  return {\n    type: t.TOGGLE_NPC_STORE,\n  };\n}\n\nexport function selectNPC(npc) {\n\n  /*\n  Before you can interact with an NPC, you need to select which one from those around you\n  */\n  return {\n    type: t.SELECT_NPC,\n  };\n}\n\nexport function talkToNPC(npcsAroundMe) {\n\n  /*\n  Conversation\n  when you start, a conversation the NPC Store overlay appears which:\n  1. shows the npc and conversation options\n  2. if the npc has item to exchange, it will show the store but not everyone npc has items\n  */\n\n  return {\n    type: t.TALK_TO_NPC,\n    payload: {npcsAroundMe}\n  };\n}\n\nexport function interactWithNeutral(neutralsAroundMe) {\n\n  /*\n  Conversation\n  when you start, a conversation the NPC Store overlay appears which:\n  1. shows the npc and conversation options\n  2. if the npc has item to exchange, it will show the store but not everyone npc has items\n  */\n\n  return {\n    type: t.INTERACT_WITH_NEUTRAL,\n    payload: {neutralsAroundMe}\n  };\n}\n\n\n\nexport function itemTradeSuccess() {\n  return {\n    type: t.PLAYER_TRADE_SUCCESS,\n  };\n}\n\nexport function itemTradeFail() {\n  return {\n    type: t.PLAYER_TRADE_FAIL,\n  };\n}\n\nexport function playerBoughtItem(inventory, currency) {\n  return {\n    type: t.PLAYER_BOUGHT_ITEM,\n    payload: {\n      inventory,\n      currency,\n    }\n  };\n}\n\nexport function playerSoldItem(inventory, currency) {\n  return {\n    type: t.PLAYER_SOLD_ITEM,\n    payload: {\n      inventory,\n      currency,\n    }\n  };\n}\n\n// we could add a second tradeItems function if it was a straight swap not involving currency\n// if it's one item assume it's for cash\nexport function tradeItem(item, buyer, seller) {\n\n  return (dispatch, getState) => {\n\n    const actions = [];\n\n    // do I have room for it my inventory?\n\n     console.log(\"max \", config.MAX_INVENTORY_ITEMS )\n     console.log(\"max vs\", buyer.inventory.length  )\n\n    if (buyer.inventory.length >= config.MAX_INVENTORY_ITEMS) {\n\n      actions.push(\n        itemTradeFail(),\n        newMessage(\"You have no room for it!\")\n      );\n\n      return dispatch(batchActions(actions));\n    }\n\n    // can I afford the item?\n    const myTotalCopper = getCreditsAsCopper(buyer);\n    const itemTotalCopper = getCreditsAsCopper(item);\n\n    if (myTotalCopper > itemTotalCopper) {\n\n      const newTotalCopper =  myTotalCopper - itemTotalCopper;\n      const newPlayerCurrency = getPlayerCurrencyAfterBuy(newTotalCopper);\n      const newPlayerInventory = [...buyer.inventory, item];\n\n      //this.props.buyItem(boughtItem, newPlayerCurrency)\n      actions.push(\n        npcSoldItem(seller, item), // later we could add currency to the npc - give thieves something to steal\n        playerBoughtItem(newPlayerInventory, newPlayerCurrency),\n      )\n\n      const { player } = getState();\n\n      // 6 slots\n      const newInventory = (player.inventory.length < 6) ? [...player.inventory, item] : [...player.inventory];\n\n\n\n      actions.push(\n        itemTradeSuccess(),\n        newMessage(`You bought a [${item.name}].`)\n      );\n\n    } else {\n      // can't afford it...\n      //this.setState({conversation: \"You can't afford it.\"})\n      // this.\n      const short = itemTotalCopper - myTotalCopper;\n      const message = `Rats! You can't afford it - you're short ${short} copper.`\t// ok for now but may want to show the  gold, silver, copper brreak ddown later\n\n      //this.props.newMessage(message)\n      actions.push(\n        itemTradeFail(),\n        newMessage(message) );\n\n    }\n\n\n    return dispatch(batchActions(actions));\n\n  }\n}\n","import * as t from '../constants/action-types';\n\nexport function toggleNPCStore() {\n  return {\n    type: t.TOGGLE_NPC_STORE,\n  };\n}\n\nexport function selectNPC(npc) {\n\n  /*\n  Before you can interact with an NPC, you need to select which one from those around you\n  */\n  return {\n    type: t.SELECT_NPC,\n  };\n}\n\n\nexport function npcBoughtItem(item, npc) {\n  return {\n    type: t.NPC_BOUGHT_ITEM,\n    payload: {\n      item,\n      npc,\n    }\n  };\n}\n\nexport function npcSoldItem(item, npc) {\n  return {\n    type: t.NPC_SOLD_ITEM,\n    payload: {\n      item,\n      npc,  \n    }\n  };\n}\n\nexport function npcTradedItem(item, npc) {\n  return {\n    type: t.NPC_TRADED_ITEM,\n    payload: {\n      item,\n      npc,  \n    }\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { lookAround } from '../actions/examine';\nimport { talkToNPC, interactWithNeutral } from '../actions/player';\nimport { getNPCsAroundMe } from '../utils/npc-utils';\n//import { getNeutralsAroundMe } from '../utils/npc-utils';\n\nimport Cell from '../components/cell';\n\nclass Player extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyPress);\n\t}\n\n\trender() {\n\n\t\tconst {key, cell, distance, zone, transit, visible} = this.props.cellProps;\n\n\t\treturn (\n\t\t\t\t<Cell\n\t\t\t\t\tkey={key}\n\t\t\t\t\tcell={cell}\n\t\t\t\t\tdistance={distance}\n\t\t\t\t\tzone={zone}\n\t\t\t\t\ttransit={transit}\n\t\t\t\t\tvisible={visible}\n\t\t\t\t\t/>\n\t\t);\n\t}\n\thandleKeyPress(e) {\n\t\tconsole.log(\"code:\",e.keyCode)\n\t\tswitch (e.keyCode) {\n\t\t\tcase 76:\n\t\t\t\tthis.props.lookAround(this.props.grid.entities);\n\t\t\t\tbreak;\n\t\t\tcase 84:\n\t\t\t\tconst npcsAroundMe = getNPCsAroundMe(this.props.grid.entities)\n\t\t\t\tif ( npcsAroundMe.length > 0) this.props.talkToNPC(npcsAroundMe);\n\t\t\t\tbreak;\n\t\t\tcase 72:\n\t\t\t\t//this.props.lookAround(this.props.grid.entities);\n\t\t\t\t//const neutralsAroundMe = getNeutralsAroundMe(this.props.grid.entities)\n\t\t\t\t//if ( neutralsAroundMe.length > 0) this.props.interactWithNeutral(npcsAroundMe, \"harvest\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nconst mapStateToProps = ({ui, grid, player}) => {\n\treturn { fogMode: ui.fogMode, grid, player};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tlookAround: (entities) => dispatch(lookAround(entities)),\n\t\ttalkToNPC: (npcsAroundMe) => dispatch(talkToNPC(npcsAroundMe))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n","export function getNPCsAroundMe(entities) {\n\n\tconst entitiesBesideMe = [];\n\tlet aroundMe = '';\n\tlet iconClass = 'floor';\n\tconst npcs = [];\n\tentities.map(row => {\n\t\tconst closeByEntities = row.filter( entity => entity.distanceFromPlayer <= 2);\n\n\t\trow.filter( entity => {\n\t\t\tif (entity.type === \"npc\") {\n\n\t\t\t}\n\t\t});\n\n\t\tif (closeByEntities.length > 0) entitiesBesideMe.push(closeByEntities)\n\n\t});\n\n\tif (entitiesBesideMe.length > 0) {\n\t\tconst npcsAroundMe = [];\n\t\tentitiesBesideMe.map(entities => {\n\t\t\tconst group = entities.filter(entity => entity.type === \"npc\");\n\t\t\tif (group && group.length > 0) {\n\t\t\t\tgroup.map( npc => npcsAroundMe.push(npc) )\n\t\t\t}\n\t\t});\n\t\treturn npcsAroundMe;\n\t} else {\n\t\treturn null; // no one is beside me\n\t}\n\n}\n","import * as t from '../constants/action-types';\n\nexport function lookAround(entities) {\n\n\tconst entitiesBesideMe = [];\n\tlet aroundMe = '';\n\tlet iconClass = 'floor';\n\tconst npcs = [];\n\tentities.map(row => {\n\t\tconst closeByEntities = row.filter( entity => entity.distanceFromPlayer <= 2);\n\n\t\trow.filter( entity => {\n\t\t\tif (entity.type === \"npc\") {\n\t\t\t\tconsole.log(\"hey npc: \", entity);\n\t\t\t}\n\t\t});\n\n\t\tif (closeByEntities.length > 0) entitiesBesideMe.push(closeByEntities)\n\n\t});\n// sets make unique\n\tconsole.log(\"beside me:\" , entitiesBesideMe)\n\n\tif (entitiesBesideMe.length > 0) {\n\n\t\tentitiesBesideMe.map(entities => {\n\t\t\tentities.map( entity => {\n\t\t\t\tconst type = (entity.type === 0) ? \"wall\" : entity.type;\n\t\t\t\tif (type !== \"floor\" && type !== \"wall\") {\n\t\t\t\t\tlet about = '';\n\t\t\t\t\tswitch(entity.type) {\n\t\t\t\t\t\tcase \"weapon\" :\n\t\t\t\t\t\t\tabout = \" \" + entity.name + \" +\" + entity.damage;\n\t\t\t\t\t\t\ticonClass = entity.type;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"shield\" :\n\t\t\t\t\t\t\tabout = \" \" + entity.name + \" +\" + entity.protection;\n\t\t\t\t\t\t\ticonClass = entity.type;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"boss\" :\n\t\t\t\t\t\tcase \"enemy\" :\n\t\t\t\t\t\t\t\tabout = \" \" + entity.name + \" lvl \" + entity.level + \" health \" + entity.health;\n\t\t\t\t\t\t\t\ticonClass = entity.type;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"exit\" :\n\t\t\t\t\t\t\tabout = \" Stairs leading down \";\n\t\t\t\t\t\t\ticonClass = entity.type;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"npc\" :\n\t\t\t\t\t\t\t\tabout = \" \" + entity.profession + \" \" + entity.name;\n\t\t\t\t\t\t\t\ticonClass = entity.type;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"potion\" :\n\t\t\t\t\t\t\t\tabout = \" Health Potion \";\n\t\t\t\t\t\t\t\ticonClass = entity.type;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\taroundMe += about;\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tconsole.log(\"iconClass: \", iconClass)\n\n\tif (aroundMe === '') {\n\t\taroundMe = \"not much to see here\";\n\t\ticonClass = 'floor';\n\t}\n\n\tconst action = \"Look\";\n\n\tconst payload = {action, aroundMe, iconClass};\n\treturn {\n\t\ttype: t.LOOK_AROUND,\n\t\tpayload\n\t};\n}\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport config from '../config.js';\n\n\nimport playerInput, {\n\tcreateLevel,\n\topeningMessages,\n\tsetDungeonLevel\n} from '../actions/';\n\nimport Cell from '../components/cell';\nimport Player from '../containers/player';\n\nclass Grid extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tviewportWidth: 0,\n\t\t\tviewportHeight: 0\n\t\t};\n\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t\tthis.handleResize = this.handleResize.bind(this);\n\n\t\tthis.VP_HEIGHT_OFFSET = 5; // in ems to match elements above this component\n\t\tthis.VP_MINIMUM_HEIGHT = 22; // in ems\n\n\t\t// set ratios for determining the viewport size\n\t\t// type can either be full or contained which is the original 31,21 ratios while full raitos are both 1 or fullscreen\n\t\tthis.VP_WIDTH_RATIO = (config.VP_TYPE === \"full\") ? config.VP_WIDTH_RATIO_FULL : config.VP_WIDTH_RATIO_CONTAINED;\n\t\tthis.VP_HEIGHT_RATIO = (config.VP_TYPE === \"full\") ? config.VP_HEIGHT_RATIO_FULL : config.VP_HEIGHT_RATIO_CONTAINED;\n\t}\n\n\tcomponentWillMount() {\n\t\t// set the initial veiwport size\n\t\tconst viewportWidth = window.innerWidth / this.VP_WIDTH_RATIO;\n\n\t\tconst viewportHeight = Math.max(\n\t\t\tthis.VP_MINIMUM_HEIGHT,\n\t\t\t(window.innerHeight / this.VP_HEIGHT_RATIO) - this.VP_HEIGHT_OFFSET\n\t\t);\n\n\t\tthis.setState({ viewportWidth, viewportHeight });\n\t\tthis.props.createLevel();\n\t\tthis.props.setDungeonLevel(1,1);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', _.throttle(this.handleKeyPress, 100));\n\t\twindow.addEventListener('resize', _.debounce(this.handleResize, 500));\n\t\tthis.props.triggerOpeningMessages();\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', _.throttle(this.handleKeyPress, 100));\n\t\twindow.removeEventListener('resize', _.debounce(this.handleResize, 500));\n\t}\n\n\thandleKeyPress(e) {\n\t\tif (typeof (this.props.grid.dungeonLevel) === 'number') {\n\t\t\tswitch (e.keyCode) {\n\t\t\t\t// north\n\t\t\t\tcase 38:\n\t\t\t\tcase 87:\n\t\t\t\t\tthis.props.playerInput([0, -1]);\n\t\t\t\t\tbreak;\n\t\t\t\t// east\n\t\t\t\tcase 39:\n\t\t\t\tcase 68:\n\t\t\t\t\tthis.props.playerInput([1, 0]);\n\t\t\t\t\tbreak;\n\t\t\t\t// south\n\t\t\t\tcase 40:\n\t\t\t\tcase 83:\n\t\t\t\t\tthis.props.playerInput([0, 1]);\n\t\t\t\t\tbreak;\n\t\t\t\t// west\n\t\t\t\tcase 37:\n\t\t\t\tcase 65:\n\t\t\t\t\tthis.props.playerInput([-1, 0]);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\thandleResize(e) {\n\t\tconst viewportWidth = e.target.innerWidth / this.VP_WIDTH_RATIO;\n\t\tconst viewportHeight = Math.max(\n\t\t\tthis.VP_MINIMUM_HEIGHT,\n\t\t\t(e.target.innerHeight / this.VP_HEIGHT_RATIO) - this.VP_HEIGHT_OFFSET\n\t\t);\n\t\tthis.setState({ viewportWidth, viewportHeight });\n\t}\n\n\trender() {\n\t\t// ensure the viewport height and width is always even\n\t\tconst viewportHeight = this.state.viewportHeight - this.state.viewportHeight % 2;\n\t\tconst viewportWidth = this.state.viewportWidth - this.state.viewportWidth % 2;\n\n\t\tconst { entities } = this.props.grid;\n\t\tconst [ playerX, playerY ] = this.props.grid.playerPosition;\n\n\t\t// define the limits of the cells to be displayed in the viewport\n\t\tconst top = _.clamp(playerY - viewportHeight / 2, 0, entities.length - viewportHeight);\n\t\tconst right = Math.max(playerX + viewportWidth / 2, viewportWidth);\n\t\tconst bottom = Math.max(playerY + viewportHeight / 2, viewportHeight);\n\t\tconst left = _.clamp(playerX - viewportWidth / 2, 0, entities[0].length - viewportWidth);\n\n\t\t// create a new array of entities which includes the distance from the player\n\t\t// used to enable fog mode\n\t\tconst newEntities = entities.map((row, i) => row.map((cell, j) => {\n\t\t\tconst distanceFromPlayer = (Math.abs(playerY - i)) + (Math.abs(playerX - j));\n\t\t\tcell.distanceFromPlayer = distanceFromPlayer;\n\t\t\treturn cell;\n\t\t}));\n\n\t\t// create cell components from the entities that are in scope of the viewport\n\t\tconst cells = newEntities.filter((row, i) => i >= top && i < bottom)\n\t\t.map((row, i) => {\n\t\t\treturn (\n\t\t\t\t<div key={i} className=\"row\">\n\t\t\t\t\t{\n\t\t\t\t\t\trow\n\t\t\t\t\t\t.filter((row, i) => i >= left && i < right)\n\t\t\t\t\t\t.map((cell, j) => {\n\n\t\t\t\t\t\t\tif (cell.type === \"player\") {\n\n\t\t\t\t\t\t\t\tconst playerCellProps = {\n\t\t\t\t\t\t\t\t\tkey:j,\n\t\t\t\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\t\t\t\tdistance:cell.distanceFromPlayer,\n\t\t\t\t\t\t\t\t\tzone:this.props.grid.dungeonLevel,\n\t\t\t\t\t\t\t\t\ttransit:this.props.grid.dungeonTransit,\n\t\t\t\t\t\t\t\t\tvisible:this.props.fogMode,\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn <Player key={j} cellProps={playerCellProps} />\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\t\t\tkey={j}\n\t\t\t\t\t\t\t\t\t\tcell={cell}\n\t\t\t\t\t\t\t\t\t\tdistance={cell.distanceFromPlayer}\n\t\t\t\t\t\t\t\t\t\tzone={this.props.grid.dungeonLevel}\n\t\t\t\t\t\t\t\t\t\ttransit={this.props.grid.dungeonTransit}\n\t\t\t\t\t\t\t\t\t\tvisible={this.props.fogMode}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"grid-wrapper\">\n\t\t\t\t\t{cells}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ ui, grid, player }) => {\n\treturn { fogMode: ui.fogMode, grid, player };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tplayerInput: (vector) => dispatch(playerInput(vector)),\n\t\tcreateLevel: () => dispatch(createLevel()),\n\t\tsetDungeonLevel: (level,transit) => dispatch(setDungeonLevel(level,transit)),\n\t\ttriggerOpeningMessages: () => dispatch(openingMessages())\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n","import React from 'react';\nimport config from '../config.js';\n\nexport default ({level}) => {\n\tconst stripClass = (config.VP_TYPE === \"full\") ? \"strip_fullscreen\" : \"strip\";\n\tconst show = (config.GAME_SHOW_TITLE) ? {display: \"flex\"} : {display: \"none\"};\n\treturn (\n\t\t<div className={stripClass} style={show}>\n\t\t\t<h1>\n\t\t\t\t<span\n\t\t\t\t\tclassName={`title title-${level}`}\n\t\t\t\t\t>\n\t\t\t\t{config.GAME_TITLE}\n\t\t\t\t</span> {config.GAME_SUBTITLE}\n\t\t\t</h1>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Messages = ({ messages }) => {\n\treturn (\n\t\t<div className=\"panel messages\">\n\t\t\t<ul>\n\t\t\t\t{\n\t\t\t\t\tmessages.slice(-3).map((msg, i) => {\n\t\t\t\t\t\treturn <li key={i}>{msg}</li>;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = ({ ui }) => {\n\treturn {messages: ui.messages};\n};\n\nexport default connect(mapStateToProps)(Messages);\n","import React from 'react';\nimport { displayCost } from '../../utils/currency-utils';\n\nexport default ({ item, handleMouseOver, handleMouseOut, handleClick, scope  }) => {\nconsole.log(\"item render: \", item);\n\n\treturn (\n    <div className={item.type}\n         onClick={() => handleClick(item,scope)}\n\n         className=\"selectItem\">\n              <div>{item.name}</div>\n              <div>{displayCost(item)}</div>\n           </div>\n\t);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { tradeItem } from '../../actions/player';\nimport {newMessage} from '../../actions/';\nimport { displayCost } from '../../utils/currency-utils';\nimport StoreItem from './storeItem';\n\nconst rowStle = {display: \"flex\", flexDireciton: \"row\", justifyContent: \"space-between\"};\n\nclass Store extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconsole.log(\"store \", this.props)\n\n\t\tconst randomIdx = Math.floor( Math.random() * this.props.storeOwner.greetings.length );\n\n\t\tthis.state = {\n\t\t\tconversation: this.props.storeOwner.greetings[randomIdx],\n\t\t\titems: this.props.storeOwner.inventory,\n\t\t\tselectedItem: null,\n\t\t\tstoreOwner: this.props.storeOwner,\n\t\t}\n\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyPress);\n\t}\n\n\thandleSelectItemClick(selectedItem,scope){\n\n\t\tconst self = scope;\n\t\tconsole.log(\"handleSelectItemClick self \", self);\n\t\tself.setState({selectedItem})\n\t}\n\n\thandleKeyPress(e) {\n\t\t// store may not keyboard events...\n\t\t//console.log(\"code:\",e.keyCode)\n\t\t/*\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase ???:\n\t\t\t\tthis.props.toggleFogMode();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t\t*/\n\t}\n\n\thandleBuyItemClick(){\n\t\tconsole.log(\"buy item\");\n\n\t\tif (this.state.selectedItem === null) return;\n\n\t\tconst buyer = this.props.player;\n\t\tconst seller = this.state.selectedNPC;\n\t\tconst item = {...this.state.selectedItem, currency: this.state.selectedItem.cost};\n\n\t\tthis.props.tradeItem(item, buyer, seller)\n\n\t}\n\n\trender() {\n\t\tconst { npc, player } = this.props;\n\n\t\tconst getItemsForSale = () => {\n\t\t\treturn this.state.items.map( (item,idx) => {\n\t\t\t\treturn (<StoreItem item={item} key={idx} handleClick={this.handleSelectItemClick} scope={this} />)\n\t\t\t})\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={rowStle}>\n\t\t\t\t\t<div>{this.state.storeOwner.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div>{this.state.conversation}</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div style={rowStle}>\n\t\t\t\t\t\t{getItemsForSale()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className=\"npcStoreButton\" onClick={()=> this.handleBuyItemClick() }>Buy</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({grid, player}) => {\n\treturn {grid, player};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\ttradeItem: (item, buyer, seller) => dispatch(tradeItem(item, buyer, seller)),\n\t\tnewMessage: (message) => dispatch(newMessage(message))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { npcBoughtItem, npcSoldItem, npcTradedItem } from '../../actions/npc';\nimport Store from './store';\n\nconst defaultItems = [\n\t{name: \"sword\", cost: 30, currency: \"copper\"},\n\t{name: \"health potion\", cost: 30, currency: \"copper\"},\n\t{name: \"shield\", cost: 30, currency: \"copper\"},\n]\n\nconst rowStle = {display: \"flex\", flexDireciton: \"row\", justifyContent: \"space-between\"};\n\nclass NPCStore extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tconversation: \"conversational text here...\",\n\t\t\titems: defaultItems,\n\t\t\tselectedItem: defaultItems[0],\n\t\t\tnpcs: [],\n\t\t\tselectedNPC: null\n\t\t}\n\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentDidUpdate(nextProps) {\n\t\twindow.addEventListener('keydown', this.handleKeyPress);\n\n\t\tconsole.log(\"npc-store componentDidUpdate\", nextProps);\n\n\t\tif (nextProps.player.npcsAroundMe > 0) {\n\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentWillReceiveProps(nextProps){\n\t\tconsole.log(\"npc-store componentDidReceiveProps\", nextProps)\n\t}\n\n\thandleItemClick(e){\n\n\t}\n\n\thandleKeyPress(e) {\n\t\t// store may not keyboard events...\n\t\t//console.log(\"code:\",e.keyCode)\n\t\t/*\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase ???:\n\t\t\t\tthis.props.toggleFogMode();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t\t*/\n\t}\n\n\thandleSelectNPC(selectedNPC){\n\n\t\tthis.setState({selectedNPC})\n\t}\n\n\trender() {\n\t\tconst { npc, player } = this.props;\n\n\t\t// if there are multiple npcs around, first you need to pick one to interact with...\n\t\tconst getPickNPC = () => {\n\t\t\tif (player.npcsAroundMe.length > 0 && this.state.selectedNPC === null) {\n\n\t\t\t\tconst list = player.npcsAroundMe.map( (npc, idx) => {\n\t\t\t\t\t//const class = (npc.selected) ? selectItem : ;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={idx}\n\t\t\t\t\t\t\t\t className=\"selectItem\"\n\t\t\t\t\t\t\t\t onClick={() => this.handleSelectNPC(npc)}>\n\t\t\t\t\t\t\t\t <div>\n\t\t\t\t\t\t\t\t \t{/* <img src={npc.portrait} /> */}\n\t\t\t\t\t\t\t\t </div>\n\t\t\t\t\t\t\t\t <div>\n\t\t\t\t\t\t\t\t \t<p>{npc.name}</p>\n\t\t\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>Who would you like to speak to?</div>\n\t\t\t\t\t\t{list}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\n\n\t\t\t} else return null;\n\t\t}\n\n\t\t// the player has picked an NPC and this NPC can trade items\n\t\tconst getStore = () => {\n\t\t\tif ( this.state.selectedNPC !== null ) {\n\t\t\t\tconst storeOwner = this.state.selectedNPC;\n\t\t\t\tconsole.log(\"owner: \", storeOwner)\n\t\t\t\tconsole.log(\"this.state: \", this.state)\n\t\t\t\treturn <Store storeOwner={storeOwner} />\n\t\t\t} else {\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t  {getPickNPC()}\n\t\t\t\t{getStore()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({grid, player}) => {\n\treturn {grid, player};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t//lookAround: (entities) => dispatch(lookAround(entities)),\n\t\t//buyItem: (npcItem) => dispatch(buyItem(npcItem)),\n\t\t//sellItem: (playerItem) => dispatch(sellItem(playerItem)),\n\t\t//tradeItem: (playerItem, npcItem) => dispatch(tradeItem(playerItem, npcIte)),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NPCStore);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleFogMode, restartGame } from '../actions';\n\nclass PlayerSettings extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyPress);\n\t}\n\n\trender() {\n\t\tconst { fogMode, restartGame, toggleFogMode } = this.props;\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<div className=\"score-item\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={toggleFogMode}\n\t\t\t\t\t\tid=\"toggle\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={fogMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"toggle\">\n\t\t\t\t\tToggle fog mode\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"score-item\">\n\t\t\t\t\t<div onClick={restartGame} className=\"restart-btn\"></div>\n\t\t\t\t\t<span onClick={restartGame} className=\"setting-label\">Restart</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\thandleKeyPress(e) {\n\t\t//console.log(\"code:\",e.keyCode)\n\t\tswitch (e.keyCode) {\n\t\t\t// north\n\t\t\tcase 70:\n\t\t\t\tthis.props.toggleFogMode();\n\t\t\t\tbreak;\n\t\t\tcase 82:\n\t\t\t\tthis.props.restartGame();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nconst mapStateToProps = ({ui, grid, player}) => {\n\treturn { fogMode: ui.fogMode, grid, player};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\ttoggleFogMode: () => dispatch(toggleFogMode()),\n\t\trestartGame: () => dispatch(restartGame()),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerSettings);\n","import React from 'react';\n\nexport default ({ iconClass, title, value }) => {\n\treturn (\n\t\t<div className=\"score-item\">\n\t\t\t<div className={`icon cell ${iconClass}`}/>\n\t\t\t<span className=\"score-label\">{`${title}: ${value}`}</span>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport Score from './score';\nimport config from '../config.js';\n\nexport default ({ grid, player }) => {\n\tconst panelClass = (config.VP_TYPE === \"full\") ? \"panel_fullscreen\" : \"panel\";\n\tconst classes = `${panelClass} scoreboard`;\n\treturn (\n\t\t<div className={classes}>\n\t\t\t<Score\n\t\t\t\ticonClass=\"potion\"\n\t\t\t\ttitle=\"Health\"\n\t\t\t\tvalue={player.health}\n\t\t\t\t/>\n\t\t\t<Score\n\t\t\t\ticonClass={`back-${grid.dungeonLevel}`}\n\t\t\t\ttitle=\"Zone\"\n\t\t\t\tvalue={`${grid.dungeonLevel} - ${grid.dungeon.exitsComplete}`}\n\t\t\t\t/>\n\t\t\t<Score\n\t\t\t\ticonClass=\"weapon\"\n\t\t\t\ttitle=\"Weapon\"\n\t\t\t\tvalue={`${player.weapon.name} (+${player.weapon.damage})`}\n\t\t\t\t/>\n\t\t\t\t<Score\n\t\t\t\t\ticonClass=\"shield\"\n\t\t\t\t\ttitle=\"Amour\"\n\t\t\t\t\tvalue={`${player.shield.name} (+${player.shield.protection})`}\n\t\t\t\t\t/>\n\t\t\t<Score\n\t\t\t\t\ticonClass=\"gold\"\n\t\t\t\t\ttitle={config.CURRENCY_GOLD_LABEL}\n\t\t\t\t\tvalue={`${player.currency.gold}`}\n\t\t\t\t\t/>\n\t\t\t<Score\n\t\t\t\t\ticonClass=\"silver\"\n\t\t\t\t\ttitle={config.CURRENCY_SILVER_LABEL}\n\t\t\t\t\tvalue={`${player.currency.silver}`}\n\t\t\t\t\t/>\n\t\t\t<Score\n\t\t\t\t\ticonClass=\"copper\"\n\t\t\t\t\ttitle={config.CURRENCY_COPPER_LABEL}\n\t\t\t\t\tvalue={`${player.currency.copper}`}\n\t\t\t\t\t/>\n\t\t\t<Score\n\t\t\t\ticonClass=\"player\"\n\t\t\t\ttitle=\"Level\"\n\t\t\t\tvalue={Math.floor(player.xp / 100)}\n\t\t\t\t/>\n\t\t\t<Score\n\t\t\t\ticonClass=\"triangle\"\n\t\t\t\ttitle=\"XP to level up\"\n\t\t\t\tvalue={100 - player.xp % 100}\n\t\t\t\t/>\n\t\t\t\t<Score\n\t\t\t\t\ticonClass={player.examining.iconClass}\n\t\t\t\t\ttitle={player.examining.action}\n\t\t\t\t\tvalue={player.examining.aroundMe}\n\t\t\t\t\t/>\n\t\t</div>\n\t);\n};\n","import React, { Component } from 'react';\nimport config from '../config.js';\n\nexport default class extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttips: [\n\t\t\t\t`Use WASD or arrow keys to move`,\n\t\t\t\t`Press L to look at tiles around you`,\n\t\t\t\t`Defeat the Boss in Zone 4 to win`,\n\t\t\t\t`Toggle Fog Mode with the 'F' key`,\n\t\t\t\t`Restart the game with the 'R' key`,\n\t\t\t\t`Defeat enemies to increase your XP`,\n\t\t\t\t`Level up to increase your damage`,\n\t\t\t\t`A new weapon might not be as good as your current one`,\n\t\t\t\t`Be sure to gain as much XP as you can in each zone`\n\t\t\t],\n\t\t\tdisplayIdx: 0,\n\t\t\tintervalId: null\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tlet counter = 1;\n\t\tconst intervalId = setInterval(() => {\n\t\t\tif (counter === this.state.tips.length) {\n\t\t\t\tcounter = 0;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tdisplayIdx: counter\n\t\t\t});\n\t\t\tcounter++;\n\t\t}, 10000);\n\n\t\tthis.setState({\n\t\t\tintervalId\n\t\t});\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.state.intervalId);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"tips\">\n\t\t\t\t<p> Tip: {this.state.tips[this.state.displayIdx]}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport config from '../config.js';\n\nimport Backpack from './backpack';\nimport Game from './game';\nimport Header from '../components/header';\nimport Messages from './messages';\nimport NPCStore from './npc-store/npc-store';\nimport PlayerSettings from './player-settings';\nimport Scoreboard from '../components/scoreboard';\nimport Tips from './tips';\n\nconst DungeonCrawler = ({grid, player}) => {\n\tconst sidebarClass = (config.VP_TYPE === \"full\") ? \"sidebar_fullscreen\" : \"sidebar\";\n\tconst app = (config.VP_TYPE === \"full\") ? \"app_fullscreen\" : \"app\";\n\n\tconst getTipWithSidebar = () => {\n\t\tif (!config.TIPS_ALONG_BOTTOM) return (<Tips/>)\n\t\telse return null;\n\t}\n\n\tconst getTipsAtBottom = () => {\n\t\tif (config.TIPS_ALONG_BOTTOM) return (<Tips/>)\n\t\telse return null;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Header level={grid.dungeonLevel}/>\n\t\t\t<div id={app}>\n\t\t\t\t<Game/>\n\t\t\t\t\t<div className={sidebarClass}>\n\t\t\t\t\t<div className=\"npcStore\">\n\t\t\t\t\t\t<NPCStore />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"backpack\">\n\t\t\t\t\t\t<Backpack />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Scoreboard player={player} grid={grid}/>\n\t\t\t\t\t<PlayerSettings/>\n\t\t\t\t\t<Messages/>\n\t\t\t\t\t{getTipWithSidebar()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{getTipsAtBottom()}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = ({ ui, grid, player }) => {\n\treturn { ui, grid, player };\n};\n\nexport default connect(mapStateToProps)(DungeonCrawler);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { enableBatching } from 'redux-batched-actions';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger'\nimport reducers from './reducers';\nimport DungeonCrawler from './containers/DungeonCrawler';\n//import * as serviceWorker from './serviceWorker';\n\nrequire('./styles/main.sass'); // root stylesheeet - .css, .scss or .sass\n\n// credit https://gist.github.com/smashercosmo/6dc9c26ce1e2e3dafde5\nconst actionTransformer = action => {\n  if (action.type === 'BATCHING_REDUCER.BATCH') {\n    action.payload.type = action.payload.reduce((result, next) => {\n      const prefix = result ? result + ' => ' : '';\n      return prefix + next.type;\n    }, '');\n\n    return action.payload;\n  }\n\n  return action;\n};\n\nconst loggerMiddleware = createLogger({actionTransformer});\n\nconst createStoreWithMiddleware = applyMiddleware(thunk, loggerMiddleware)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(enableBatching(reducers))}>\n    <DungeonCrawler/>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}